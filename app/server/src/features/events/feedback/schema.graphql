type EventLiveFeedback implements Node {
    id: ID!
    message: String!
    event: Event
    createdAt: Date
    createdBy: User
    createdById: ID
    isReply: Boolean
    refFeedback: EventLiveFeedback
}

type EventLiveFeedbackEdge {
    node: EventLiveFeedback!
    cursor: String!
}

type EventLiveFeedbackConnection {
    edges: [EventLiveFeedbackEdge!]
    pageInfo: PageInfo!
}

type FeedbackOperation {
    operationType: Operation!
    edge: EventLiveFeedbackEdge!
}

type EventFeedbackMutationResponse implements MutationResponse {
    isError: Boolean!
    message: String!
    body: EventLiveFeedbackEdge
}

input CreateFeedback {
    message: String!
    eventId: ID!
    refFeedbackId: ID
    isReply: Boolean
}


type Mutation {
    createFeedback(input: CreateFeedback): EventFeedbackMutationResponse
}

type Query {
    myFeedback(eventId: ID!): [EventLiveFeedback]
}

type Subscription {
    feedbackCRUD(eventId: ID!): FeedbackOperation!
}
