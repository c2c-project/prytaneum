// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../src/__generated__/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

model User {
  // Info
  id        String @id @default(uuid()) @db.Uuid
  email     String @unique @db.VarChar(320)
  name      String @db.VarChar(255)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  researchProjectConsent Boolean @default(false)
  
  // Roles
  role      Role @default(STUDENT)

  // Relations
  teacherOf Teacher[]
  studentOf Student[]
  assignmentResponses AssignmentResponse[]
}

model Class {
  // Info
  id  String @id @default(uuid()) @db.Uuid
  termId String @unique @db.VarChar(255)
  name String @db.VarChar(255)

  // Relations
  teachers Teacher[]
  students Student[]
  assignments Assignment[]
}

model Teacher {
  // Info
  userId String @db.Uuid
  classId String @db.Uuid

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  class Class @relation(fields: [classId], references: [id], onDelete: Cascade)
  @@id([userId, classId])
}

model Student {
  // Info
  userId String @db.Uuid
  classId String @db.Uuid

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  class Class @relation(fields: [classId], references: [id], onDelete: Cascade)
  @@id([userId, classId])
}

model Assignment {
  // Info
  id String @id @default(uuid()) @db.Uuid
  classId String @db.Uuid
  name String @db.VarChar(255)
  description String @db.VarChar(255)
  fileName String @db.VarChar(255)
  dueDate DateTime @default(now())

  // Relations
  class Class @relation(fields: [classId], references: [id], onDelete: Cascade)
  responses AssignmentResponse[]
}

enum assignmentType {
  PRE
  POST
  MAIN
}

model AssignmentResponse {
  // Info
  assignmentId String @db.Uuid
  userId String @db.Uuid
  fileName String @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  assignmentType assignmentType @default(MAIN)

  // Relations
  assignment Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@id([assignmentId, userId])
}
